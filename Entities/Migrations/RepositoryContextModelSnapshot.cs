// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entities.Model.DepartamentsModel.Departament", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("crated_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("father_name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("first_name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<int?>("img_id")
                        .HasColumnType("integer");

                    b.Property<string>("last_name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<int?>("parent_id")
                        .HasColumnType("integer");

                    b.Property<int?>("status_id")
                        .HasColumnType("integer");

                    b.Property<string>("text")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("img_id");

                    b.HasIndex("status_id");

                    b.ToTable("departament_2024parent");
                });

            modelBuilder.Entity("Entities.Model.FileModel.Files", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("status_id")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("url")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("id");

                    b.HasIndex("status_id");

                    b.HasIndex("title")
                        .IsUnique();

                    b.ToTable("files_2024parent");
                });

            modelBuilder.Entity("Entities.Model.StatusModel.Status", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("status")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("id");

                    b.ToTable("statuses_2024parent");

                    b.HasData(
                        new
                        {
                            id = 1,
                            status = "Active"
                        },
                        new
                        {
                            id = 2,
                            status = "Deleted"
                        });
                });

            modelBuilder.Entity("Entities.Model.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("login")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("token")
                        .HasColumnType("text");

                    b.Property<int?>("user_type_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("login")
                        .IsUnique();

                    b.HasIndex("user_type_id");

                    b.ToTable("users_2024parent");

                    b.HasData(
                        new
                        {
                            id = 1,
                            login = "admin",
                            password = "X85cpohQrV+USeuUGKBe8qQ4PKBd1oT1MYOu8wOr2V4=",
                            user_type_id = 1
                        });
                });

            modelBuilder.Entity("Entities.Model.UserType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("status_id")
                        .HasColumnType("integer");

                    b.Property<string>("type")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("id");

                    b.HasIndex("status_id");

                    b.ToTable("user_types_2024parent");

                    b.HasData(
                        new
                        {
                            id = 1,
                            type = "Admin"
                        });
                });

            modelBuilder.Entity("Entities.Model.DepartamentsModel.Departament", b =>
                {
                    b.HasOne("Entities.Model.FileModel.Files", "img_")
                        .WithMany()
                        .HasForeignKey("img_id");

                    b.HasOne("Entities.Model.StatusModel.Status", "status_")
                        .WithMany()
                        .HasForeignKey("status_id");

                    b.Navigation("img_");

                    b.Navigation("status_");
                });

            modelBuilder.Entity("Entities.Model.FileModel.Files", b =>
                {
                    b.HasOne("Entities.Model.StatusModel.Status", "status_")
                        .WithMany()
                        .HasForeignKey("status_id");

                    b.Navigation("status_");
                });

            modelBuilder.Entity("Entities.Model.User", b =>
                {
                    b.HasOne("Entities.Model.UserType", "user_type_")
                        .WithMany()
                        .HasForeignKey("user_type_id");

                    b.Navigation("user_type_");
                });

            modelBuilder.Entity("Entities.Model.UserType", b =>
                {
                    b.HasOne("Entities.Model.StatusModel.Status", "status_")
                        .WithMany()
                        .HasForeignKey("status_id");

                    b.Navigation("status_");
                });
#pragma warning restore 612, 618
        }
    }
}
